{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isErrorValidation","checkValidationUrl","url","test","createMovie","onAdd","props","isCorrectImgUrl","clearMovie","setState","changeHandler","event","target","name","value","this","onSubmit","preventDefault","type","required","placeholder","onChange","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75783e85.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isErrorValidation: false,\n  };\n\n  checkValidationUrl = (url) => {\n    // eslint-disable-next-line\n    const regExp = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._s+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g;\n\n    return regExp.test(url);\n  }\n\n  createMovie = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const { onAdd } = this.props;\n\n    let isCorrectUrl = true;\n\n    const isCorrectImgUrl = this.checkValidationUrl(imgUrl);\n    const isCorrectImbdUrl = this.checkValidationUrl(imdbUrl);\n\n    isCorrectUrl = isCorrectImbdUrl && isCorrectImgUrl;\n\n    if (!isCorrectUrl) {\n      this.setState({ isErrorValidation: true });\n\n      return;\n    }\n\n    const newMovie = {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    };\n\n    onAdd(newMovie);\n    this.clearMovie();\n  }\n\n  clearMovie = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl, imdbUrl,\n      imdbId,\n      isErrorValidation,\n    } = this.state;\n\n    return (\n      <>\n        <h1 className=\"title\">\n          Add new movie\n        </h1>\n        {isErrorValidation && (\n          <div className=\"is-error\">\n            <h1>Please enter corect url</h1>\n          </div>\n        )}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            this.createMovie();\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"input\"\n            required\n            name=\"title\"\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={this.changeHandler}\n          />\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            required\n            placeholder=\"Enter description\"\n            className=\"input\"\n            value={description}\n            onChange={this.changeHandler}\n\n          />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            required\n            className=\"input\"\n            placeholder=\"Enter img url\"\n            value={imgUrl}\n            onChange={this.changeHandler}\n          />\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            required\n            className=\"input\"\n            placeholder=\"Enter imdbUrl\"\n            value={imdbUrl}\n            onChange={this.changeHandler}\n          />\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            required\n            className=\"input\"\n            placeholder=\"Enter imdbId\"\n            value={imdbId}\n            onChange={this.changeHandler}\n          />\n          <button\n            className=\"button\"\n            type=\"submit\"\n          >\n            Add film\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}