{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","isErrorValidation","checkValidationUrl","url","test","createMovie","clearMovie","setState","changeHandler","event","target","name","value","isValidationUrl","this","onAdd","props","onSubmit","preventDefault","type","required","placeholder","onChange","disabled","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88fe9f4b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    isErrorValidation: false,\n  };\n\n  checkValidationUrl = (url) => {\n    // eslint-disable-next-line\n    const regExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return regExp.test(url);\n  }\n\n  createMovie = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    return {\n      title,\n      description,\n      imdbUrl,\n      imgUrl,\n      imdbId,\n    };\n  }\n\n  clearMovie = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  changeHandler = (event) => {\n    const { name, value } = event.target;\n    let isValidationUrl = false;\n\n    if (name === 'imgUrl' || name === 'imbdUrl') {\n      isValidationUrl = this.checkValidationUrl(value);\n    }\n\n    if (!isValidationUrl) {\n      this.setState({ isErrorValidation: true });\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl, imdbUrl,\n      imdbId,\n      isErrorValidation,\n    } = this.state;\n    const { onAdd } = this.props;\n\n    return (\n      <>\n        <h1 className=\"title\">\n          Add new movie\n        </h1>\n        {isErrorValidation && (\n          <div className=\"is-error\">\n            <h1>Please enter corect url</h1>\n          </div>\n        )}\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            onAdd(this.createMovie());\n            this.clearMovie();\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"input\"\n            required\n            name=\"title\"\n            placeholder=\"Enter title\"\n            value={title}\n            onChange={this.changeHandler}\n          />\n          <textarea\n            type=\"text\"\n            name=\"description\"\n            required\n            placeholder=\"Enter description\"\n            className=\"input\"\n            value={description}\n            onChange={this.changeHandler}\n\n          />\n          <input\n            type=\"text\"\n            name=\"imgUrl\"\n            required\n            className=\"input\"\n            placeholder=\"Enter img url\"\n            value={imgUrl}\n            onChange={this.changeHandler}\n          />\n          <input\n            type=\"text\"\n            name=\"imdbUrl\"\n            required\n            className=\"input\"\n            placeholder=\"Enter imdbUrl\"\n            value={imdbUrl}\n            onChange={this.changeHandler}\n          />\n          <input\n            type=\"text\"\n            name=\"imdbId\"\n            required\n            className=\"input\"\n            placeholder=\"Enter imdbId\"\n            value={imdbId}\n            onChange={this.changeHandler}\n          />\n          <button\n            className=\"button\"\n            type=\"submit\"\n            disabled={isErrorValidation}\n          >\n            Add film\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}